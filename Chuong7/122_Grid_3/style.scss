$blue-color: #42a7fe;
$green-color: #16c090;
$primary-color: #fa4c53;
$secondary-color: #fd9c84;
$gradient: linear-gradient(to right, $primary-color, $secondary-color);
$text-color: #291667;
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}
@mixin maxWidth($value) {
  @media screen and (max-width: $value) {
    @content;
  }
}
@mixin textOverflow($clamp: 2) {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
}
///////////////////////////////////////////
input,
select,
textarea,
button {
  font-size: 1.6rem;
  font-family: "Poppins", sans-serif;
  font-weight: normal;
  outline: none;
  box-sizing: border-box;
}
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
textarea {
  resize: none;
}
button {
  cursor: pointer;
}
///////////////////////////////////////////
html {
  font-size: 62.5%;
}
body {
  font-size: 1.6rem;
  font-family: "Poppins", sans-serif;
}
a {
  text-decoration: none;
}
img {
  display: block;
  max-width: 100%;
}
@mixin flexbox(
  $align: flex-start,
  $justify: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
  flex-wrap: $wrap;
}
body {
  background-color: #f3f3f3;
  padding: 2rem;
}

//////////////////////////////////////////
// Grid phần 3
.grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 2rem;
  &-item {
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    &:first-child {
      // grid-column: grid-column-start / grid-column-end
      // Có thể dùng -1 để kết thúc ở cột cuối cùng hoặc span 2 để chiếm 2 cột
      grid-column-start: 1;
      grid-column-end: 3;
      grid-column: 1 / 3;
      grid-row-start: 1;
      grid-row-end: 3;
      grid-row: 1 / span 2;
    }
    &:nth-child(2) {
      grid-column: 3 / 4;
      grid-row: 1 / 2;
    }
    &:nth-child(3) {
      grid-column: 4 / 5;
      grid-row: 1 / 2;
    }
    &:nth-child(4) {
      grid-column: 1 / 2;
      grid-row: 3 / 4;
    }
    &:nth-child(5) {
      grid-column: 2 / 3;
      grid-row: 3 / 4;
    }
    &:last-child {
      grid-column: 3 / -1;
      grid-row: 2 / 4;
    }
  }
}
